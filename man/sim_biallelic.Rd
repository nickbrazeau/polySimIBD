% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simbialldata.R
\name{sim_biallelic}
\alias{sim_biallelic}
\title{Simulate biallelic data}
\usage{
sim_biallelic(COIs = c(1, 1), haplotypematrix = matrix(1, 2, 2),
  coverage = 100, alpha = 1, overdispersion = 0, epsilon = 0)
}
\arguments{
\item{COIs}{integer vector of the number of haplotypes within each sample.}

\item{haplotypematrix}{matrix of haplotypes that correspond to within individual COI.}

\item{coverage}{coverage at each locus. If a single value then the same
coverage is applied over all loci.}

\item{alpha}{shape parameter of the symmetric Dirichlet prior on strain
proportions.}

\item{overdispersion}{the extent to which counts are over-dispersed relative
to the binomial distribution. Counts are Beta-binomially distributed, with
the beta distribution having shape parameters \code{p/overdispersion} and
\code{(1-p)/overdispersion}.}

\item{epsilon}{the probability of a single read being mis-called as the other
allele. Applies in both directions.}
}
\value{
List of non-referent within-sample allele frequency dataframe (unphased) and phased vectors
of non-referent within-sample allele counts, overall coverage, strain proportions, and the biallelic haplotype matrix.
}
\description{
Simulate biallelic data from a simple statistical model. Inputs
include the complexity of infection (COI) and some parameters dicating skew and error
distributions. Outputs include the phased haplotypes and the un-phased read
count and coverage data.
}
\details{
Simulated data are drawn from a simple statistical model:
\enumerate{
\item Strain proportions are drawn from a symmetric Dirichlet
distribution with shape parameter \code{alpha}.
\item Phased haplotypes are drawn at every locus, one for each
\code{COI}. The allele at each locus is drawn from a Bernoulli
distribution with probability given by the \code{PLAF}.
\item The "true" within-sample allele frequency at every locus is
obtained by multiplying haplotypes by their strain proportions, and
summing over haplotypes. Errors are introduced through the equation
\deqn{wsaf_error = wsaf*(1-e) + (1-wsaf)*e}where \eqn{wsaf} is the WSAF
without error and \eqn{e} is the error parameter \code{epsilon}.
\item Final read counts are drawn from a beta-binomial distribution with
expectation \eqn{w_error}. The raw number of draws is given by the
\code{coverage}, and the skew of the distribution is given by the
\code{overdispersion} parameter. If \code{overdispersion = 0} then the
distribution is binomial, rather than beta-binomial.
}
}
